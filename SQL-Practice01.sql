-----------------------------------------------------------------------------
-- 문제 1.
-----------------------------------------------------------------------------
-- 전체 직원의 정보를 조회하세요. 
-- 정렬 : 정렬은 입사일(hire_date)의 올림차순(ASC)으로 가장 선임부터 출력이 되도록 하세요. 
-- 정보 순서 : 이름(first_name last_name), 월급(salary), 전화번호(phone_number), 
--           입사일(hire_date) 순서
-- 별명 붙히기 : “이름”, “월급”, “전화번호”, “입사일” 로 컬럼 이름을 대체해 보세요.

SELECT
    "A1"."FIRST_NAME"
    || ' '
    || "A1"."LAST_NAME" "이름",
    "A1"."SALARY"       "월급",
    "A1"."PHONE_NUMBER" "전화번호",
    "A1"."HIRE_DATE"    "입사일"
FROM
    "HR"."EMPLOYEES" "A1"
ORDER BY
    "A1"."HIRE_DATE";
    
-----------------------------------------------------------------------------
-- 문제 2.
-----------------------------------------------------------------------------
-- 업무(jobs)별로 업무이름(job_title)과 최고월급(max_salary)을 월급의 내림차순(DESC)로 
-- 정렬하세요.
-- 정렬 : 월급의 내림차순으로 정렬하세요.
-- 출력 항목 및 별명 : 업무, 업무이름, 최고 월급
SELECT
    "A1"."JOB_ID"     "업무",
    "A1"."JOB_TITLE"  "업무 이름",
    "A1"."MAX_SALARY" "최고 월급"
FROM
    "HR"."JOBS" "A1"
ORDER BY
    "A1"."MAX_SALARY" DESC;
    
-----------------------------------------------------------------------------
-- 문제 3.
-----------------------------------------------------------------------------
-- 담당 매니저가 배정되어있으나, 커미션 비율이 없고, 월급이 3000 초과인 직원의 이름, 매니저
-- 아이디, 커미션 비율, 월급을 출력하세요.
-- 조건 : 담당 매니저가 배정되어있으나, 커미션 비율이 없고, 월급이 3000 초과인 직원 찾기
-- 출력 항목 및 별명 : 이름, 매니저 아이디, 커미션 비율, 월급 출력
SELECT
    "A1"."FIRST_NAME"
    || ' '
    || "A1"."LAST_NAME"   "이름",
    "A1"."MANAGER_ID"     "매니저 아이디",
    "A1"."COMMISSION_PCT" "커미션 비율",
    "A1"."SALARY"         "월급"
FROM
    "HR"."EMPLOYEES" "A1"
WHERE
    "A1"."MANAGER_ID" IS NOT NULL
    AND "A1"."COMMISSION_PCT" IS NULL
    AND "A1"."SALARY" > 3000;
    
-----------------------------------------------------------------------------
-- 문제 4.
-----------------------------------------------------------------------------
-- 최고월급(max_salary)이 10000 이상인 업무의 이름(job_title)과 최고월급(max_salary)을 
-- 최고월급의(max_salary) 내림차순(DESC)로 정렬하여 출력하세요.
-- 조건 : 최고월급(max_salary)이 10000 이상인 업무 찾기
-- 정렬 : 최고월급의(max_salary) 내림차순(DESC)로 정렬
-- 출력 항목 및 별명 : 업무의 이름(job_title), 최고월급(max_salary)
Select
    job_title as "업무 이름",
    max_salary as "최고 월급"
From 
    jobs
Where
    max_salary >= 10000
Order by
    max_salary Desc;
    
-----------------------------------------------------------------------------
-- 문제 5.
-----------------------------------------------------------------------------
-- 월급이 14000 미만 10000 이상인 직원의 이름(first_name), 월급, 커미션 퍼센트를 월급 순
-- (내림차순) 출력하세오. 단 커미션 퍼센트 가 null 이면 0으로 나타내시오
-- 조건 : 월급이 14000미만, 10000 이상 항목 찾기
--       단, 커미션 퍼센트가 null이면 0으로 표시
-- 정렬 : 월급 내림차순으로 정렬
-- 출력 항목 및 별명 : 직원의 이름(first_name), 월급, 커미션 퍼센트
Select
    first_name as "이름",
    salary as "월급",
    Nvl(commission_pct, 0) as "커미션 퍼센트"
From 
    employees
Where 
    salary < 14000 
AND
    salary >= 10000
Order By
    first_name Desc,
    salary Desc,
    commission_pct Desc;
        
-----------------------------------------------------------------------------
-- 문제 6.
-----------------------------------------------------------------------------
-- 부서번호가 10, 90, 100 인 직원의 이름, 월급, 입사일, 부서번호를 나타내시오
-- 입사일은 1977-12와 같이 표시하시오
-- 조건 : 부서번호가 10, 90, 100인 항목 표시
--       입사일은 1977-12와 같이 표시
-- 출력 항목 및 별명 : 직원의 이름, 월급, 입사일, 부서번호
Select 
    first_name || ' ' || last_name as "이름",
    salary as "월급",
    To_Char(hire_date, 'YYYY-MM') as "입사일",
    department_id as "부서번호"
From 
    employees
Where 
    department_id IN (10, 90, 100); 

-----------------------------------------------------------------------------
-- 문제 7.
-----------------------------------------------------------------------------
-- 이름(first_name)에 S 또는 s 가 들어가는 직원의 이름, 월급을 나타내시오
-- 조건 : 이름(first_name)에 S 또는 s 가 들어가는 항목 표시
-- 출력 항목 및 별명 : 직원의 이름, 월급
Select 
    first_name || ' ' || last_name as "이름",
    salary as "월급"
From 
    employees
Where
    Lower(first_name) Like '%s%';
    
-----------------------------------------------------------------------------
-- 문제 8.
-----------------------------------------------------------------------------
-- 전체 부서를 출력하려고 합니다. 
-- 순서는 부서이름이 긴 순서대로 출력해 보세오.
-- 조건 : 부서 이름(Department_name)이 긴 순으로 출력
-- 출력 항목 및 별명 : 출력 예시 없음
Select
    department_id as "부서 id",
    department_name as "부서 이름",
    manager_id as "담당자 id",
    location_id as "지점 id"
From
    departments
Order by
    Length(department_name) Desc,
    department_id Asc;
    
-----------------------------------------------------------------------------
-- 문제 9.
-----------------------------------------------------------------------------
-- 정확하지 않지만, 지사가 있을 것으로 예상되는 나라들을 나라 이름을 대문자로 출력하고
-- 올림차순(ASC)으로 정렬해 보세오.
-- 조건 : Country_id를 받아 대문자로 출력
-- 출력 항목 및 별명 : 출력 예시 없음. (Country_id -> 나라 이름) 대문자 오름차순
Select 
    Upper(country_id) as "나라 이름",
    city as "도시명",
    postal_code as "우편번호",
    street_address as "도로명"
From 
    locations
Order by
    "나라 이름" Asc;

-----------------------------------------------------------------------------
-- 문제 10.
-----------------------------------------------------------------------------
-- 입사일이 13/12/31일 이전 입사한 직원의 이름, 월급, 전화 번호, 입사일을 출력하세요
-- 전화번호는 545-343-3433 과 같은 형태로 출력하시오.
-- 조건 : 입사일이 03/12/31 일 이전 입사한 직원 정보 출력
-- 출력 항목 및 별명 : 이름, 월급, 전화 번호, 입사일을 출력
--                  전화번호는 545-343-3433 과 같은 형태로 출력
Select
    first_name || ' ' || last_name as "이름",
    salary as "월급",
    Replace(phone_number, '.', '-') as "전화 번호",
    hire_date as "입사일"
From
    employees
Where
    hire_date < '13/12/31';
